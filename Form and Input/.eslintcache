[{"C:\\Users\\Thenmozhi\\React projects\\Form and Input\\src\\index.js":"1","C:\\Users\\Thenmozhi\\React projects\\Form and Input\\src\\App.js":"2","C:\\Users\\Thenmozhi\\React projects\\Form and Input\\src\\components\\SimpleInput.js":"3","C:\\Users\\Thenmozhi\\React projects\\Form and Input\\src\\hooks\\use-input.js":"4","C:\\Users\\Thenmozhi\\React projects\\Form and Input\\src\\components\\BasicForm.js":"5"},{"size":179,"mtime":1665059807391,"results":"6","hashOfConfig":"7"},{"size":162,"mtime":1665147475965,"results":"8","hashOfConfig":"7"},{"size":2233,"mtime":1665147223961,"results":"9","hashOfConfig":"7"},{"size":1292,"mtime":1665147269917,"results":"10","hashOfConfig":"7"},{"size":2877,"mtime":1665147351764,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"84hklm",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Thenmozhi\\React projects\\Form and Input\\src\\index.js",[],["24","25"],"C:\\Users\\Thenmozhi\\React projects\\Form and Input\\src\\App.js",[],"C:\\Users\\Thenmozhi\\React projects\\Form and Input\\src\\components\\SimpleInput.js",["26","27","28","29"],"\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputhasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetInputName\n  } = useInput(value => value.trim() !== \"\");\n\n  const {\n    value: enteredEmailId,\n    isValid: enteredEmailIdIsValid,\n    hasError: emailInputhasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetInputemail\n  } = useInput(value => value.trim() !== \"\");\n\n  let formIsValid = false;\n  \n    if(enteredNameIsValid && enteredEmailIdIsValid){\n      formIsValid = true;\n    }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    //setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    //setEnteredEmailTouched(true);\n    if(!enteredEmailIdIsValid) {\n      return;\n    }\n    console.log(enteredName, enteredEmailId);\nresetInputName(\"\");\nresetInputemail(\"\");\n  };\n\n  const nameInputClasses = nameInputhasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n    const emailInputClasses = emailInputhasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputhasError && (\n          <p className=\"error-text\">Name must not be empty</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"name\">Email Id</label>\n        <input\n          type=\"email\"\n          id=\"name\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmailId}\n        />\n        {emailInputhasError && (\n          <p className=\"error-text\">Email ID must not be empty</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","C:\\Users\\Thenmozhi\\React projects\\Form and Input\\src\\hooks\\use-input.js",["30","31","32","33"],"C:\\Users\\Thenmozhi\\React projects\\Form and Input\\src\\components\\BasicForm.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":10,"nodeType":"40","messageId":"41","endLine":1,"endColumn":19},{"ruleId":"38","severity":1,"message":"42","line":1,"column":21,"nodeType":"40","messageId":"41","endLine":1,"endColumn":29},{"ruleId":"43","severity":1,"message":"44","line":24,"column":3,"nodeType":"45","messageId":"46","endLine":32,"endColumn":78},{"ruleId":"43","severity":1,"message":"44","line":41,"column":3,"nodeType":"45","messageId":"46","endLine":53,"endColumn":7},{"ruleId":"38","severity":1,"message":"47","line":27,"column":10,"nodeType":"40","messageId":"41","endLine":27,"endColumn":22},{"ruleId":"38","severity":1,"message":"48","line":27,"column":24,"nodeType":"40","messageId":"41","endLine":27,"endColumn":39},{"ruleId":"38","severity":1,"message":"49","line":28,"column":10,"nodeType":"40","messageId":"41","endLine":28,"endColumn":19},{"ruleId":"38","severity":1,"message":"50","line":28,"column":21,"nodeType":"40","messageId":"41","endLine":28,"endColumn":33},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'enteredValue' is assigned a value but never used.","'setEnteredValue' is assigned a value but never used.","'isTouched' is assigned a value but never used.","'setIsTouched' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]